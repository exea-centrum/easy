kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: hello-node-ingress
  namespace: default
  uid: d936df0c-d07f-4b0c-8b12-a77d2f3feef3
  resourceVersion: '1825797'
  generation: 4
  creationTimestamp: '2024-04-12T17:11:06Z'
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"networking.k8s.io/v1","kind":"Ingress","metadata":{"annotations":{},"name":"hello-node-ingress","namespace":"default"},"spec":{"rules":[{"http":{"paths":[{"backend":{"service":{"name":"hello-node","port":{"number":8080}}},"path":"/hello-node/","pathType":"Prefix"}]}}]}}
  managedFields:
    - manager: nginx-ingress-controller
      operation: Update
      apiVersion: networking.k8s.io/v1
      time: '2024-04-12T17:11:17Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:loadBalancer:
            f:ingress: {}
      subresource: status
    - manager: kubectl-client-side-apply
      operation: Update
      apiVersion: networking.k8s.io/v1
      time: '2024-04-12T17:50:23Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:spec:
          f:rules: {}
spec:
  ingressClassName: public
  rules:
    - http:
        paths:
          - path: /hello-node/
            pathType: Prefix
            backend:
              service:
                name: hello-node
                port:
                  number: 8080
status:
  loadBalancer:
    ingress:
      - ip: 127.0.0.1
